# ---------------------------------------------------------------------------- #
# --------------------------- Section A - Aliases ---------------------------- #
# ---------------------------------------------------------------------------- #

# Aliases are defined for use ONLY within the context of this file.
# In other words, an alias will NEVER be referenced by code.

# Use the classpath prefix when the configuration files are packaged inside the jar
#var.dir=classpath:

# Windows
#var.dir=file:///c:/var/lunos
server.port=9080
server.servlet.context-path=/fsa
spring.main.allow-bean-definition-overriding=true
# Linux
var.dir=file:///var/lunos
# ---------------------------------------------------------------------------- #
# --------------------- Section B - General configurations ------------------- #
# ---------------------------------------------------------------------------- #

# Set which Authentication Provider to use, supported options are: Lunos, Keycloak, AzureAD
auth.provider=Lunos

# used to authenticate end user to log into lunos-web application
spring.security.oauth2.client.registration.keycloak.client-id=login-app
spring.security.oauth2.client.registration.keycloak.client-name=Login App
spring.security.oauth2.client.registration.keycloak.client-secret=login-app-secret
spring.security.oauth2.client.registration.keycloak.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.redirect-uri=fsa-web/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.keycloak.scope=openid

spring.security.oauth2.client.provider.keycloak.token-uri=http://keycloak:8081/realms/lunos/protocol/openid-connect/token
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://keycloak:8081/realms/lunos
spring.security.oauth2.client.provider.keycloak.authorization-uri=http://localhost:8081/realms/lunos/protocol/openid-connect/auth
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username

# The bootstrap beanrefcontext file
#base.configuration.mode=DEVELOPMENT


# The configuration file for the Oracle Policy Automation engine access.
opa-config.file=${var.dir}/opa-config.properties
# Should OPA be used?
# Valid options are:
#    ENABLED - Use OPA logic engine
#    DISABLED - Don't use OPA logic engine
opa-engine=DISABLED

# Should LUNOS send mails?
# Valid options are:
#    ENABLED - use sendmail functionality
#    DISABLED - don't use sendmail functionality
sendmail=ENABLED
# the following settings need to be specified in case 'sendmail' is ENABLED
sendmail.username=info@silvermoongroup.com
sendmail.password=SilvermoonLun9$
sendmail.properties.mail.smtp.host=smtp.gmail.com
sendmail.properties.mail.smtp.socketFactory.port=465
sendmail.properties.mail.smtp.auth=true
sendmail.properties.mail.smtp.port=465

# The configuration setings for enabling LUNOS sending sms messages
# Valid options for 'sendsms' are:
#    ENABLED - use sendsms functionality
#    DISABLED - don't use sendsms functionality
sendsms=ENABLED


# The location of the default hibernate-postgresql.properties file which specifies the
# common hibernate properties
hibernate.properties.file=${var.dir}/hibernate-postgresql.properties

# Should Request and Authorisation be used?
# Valid options are:
#    AUTO - Defaults to ENABLED.
#    ENABLED - Use request and authorisation
#    DISABLED - Don't use request and authorisation
request-and-authorisation=DISABLED

# ---------------------------------------------------------------------------- #
# -------------- Section C - Component specific configurations --------------- #
# ---------------------------------------------------------------------------- #

# Each of the following configurations can be modified, or externalised
# completely.

# To override the default hibernate settings, externalise the
# <component>.hibernate-postgresql.properties.file location, and specify your own
# configuration

# ================================== Common ===================================
common.hibernate.properties.file=${var.dir}/hibernate-postgresql.properties

# ============================== Physical Object ==============================
physicalobject.hibernate.properties.file=${var.dir}/hibernate-postgresql.properties

# =================================== Rating ==================================
rating.hibernate.properties.file=${var.dir}/hibernate-postgresql.properties

# =================================== Party =================================== 
# Note: the structural manager is extended
party.hibernate.properties.file=${var.dir}/hibernate-postgresql.properties

# ================================ Communication ==============================
communication.hibernate.properties.file=${var.dir}/hibernate-postgresql.properties

# communication template location directory
communication.template.dir=${var.dir}/communication

#= =================================== FTX ====================================
ftx.hibernate.properties.file=${var.dir}/hibernate-postgresql.properties

# ========================== Activity Condition Place =========================
activityconditionplace.hibernate.properties.file=${var.dir}/hibernate-postgresql.properties

# =================================== Claim ===================================
claim.hibernate.properties.file=${var.dir}/hibernate-postgresql.properties

# ==================================== SPF ====================================
spflite.hibernate.properties.file=${var.dir}/hibernate-postgresql.properties
spf.custom.cache.file=classpath:/ehcache-spf-custom.xml

# Navigation Path Evaluators
#spflite.navigationpath.evaluator={classpath:'com.silvermoongroup.spflite.specframework.engine.invoker.navigationpath.JavaClassNameNavigationPathLogicInvoker'}
#spflite.navigationpath.evaluator={mnp:'com.silvermoongroup.spflite.navigationpath.helpers.MNPNavigationPathLogicInvoker'}
#spflite.navigationpath.evaluator={PMWNavExpression:'com.silvermoongroup.fsa.navigationpath.invoker.PMWExpressionNavigationPathLogicInvoker'}

# ==================== Financial Services Agreement (FSA) =====================
fsa.hibernate.properties.file=${var.dir}/hibernate-postgresql.properties
rulesengine.hibernate.properties.file=${var.dir}/hibernate-postgresql.properties

# ============================ Product Development ============================
# The product development functionality uses the following regular expression to recognise which properties
# it can evaluate on Roles and Agreement objects.
navpath.agreementDomainRegExpr=([a-zA-Z \\'\\.]+)(\\.((startDate)|(endDate)))

path.message.resources=${var.dir}/resources/messages

# Used by FSA-web UI to specify default product upload endpoint
product.upload.server=product-development-ws
product.upload.port=9020

#For the product search UI: List of product criteria to allow searching on. Comma separated.
search.product.criteria=Location,Marketable Product

# =============================================================================
# Supported locales
# =============================================================================
locales=en,fr,jp,zh_CN

# =============================================================================
# Supported date formats in java.text.SimpleDateFormat syntax
# see http://docs.oracle.com/javase/6/docs/api/java/text/SimpleDateFormat.html
# =============================================================================
dateformats=dd MM yyyy,MM/dd/yyyy
timeformats=HH:mm,hh:mm

# =============================================================================
# Determine whether the properties page is displayed when the callback for a
# given kind is invoked
# =============================================================================
display.role.properties.on.callback={5004:true, 5019:true}


# =============================================================================
# Custom logout URL
# An optional custom url to invoke AFTER the HTTP session is invalidated
# If the URL begins with a / the context path will NOT be prepended
# =============================================================================
# IBM LTPA (SSO) logout
#logout.url=ibm_security_logout?logoutExitPage=/

# The hibernate settings for a single database - multiple schema configuration (schema-per-component)
hibernate.default_schema.physicalobject=IAAPHYOB
hibernate.default_schema.party=IAAPRTY
hibernate.default_schema.common=IAACOMM
hibernate.default_schema.ftx=IAAFTX
hibernate.default_schema.rating=IAARATE
hibernate.default_schema.activity=IAAACP
hibernate.default_schema.communication=IAACOMMU
hibernate.default_schema.claim=IAACLAIM
hibernate.default_schema.spflite=IAASPF
hibernate.default_schema.fsa=IAAFSA
hibernate.default_schema.rulesengine=IAAFSA

jdbc.url=jdbc:postgresql://lunos-db:5432/iaalunos
jdbc.driver.class.name=org.postgresql.Driver
jdbc.datasource.class.name=org.postgresql.xa.PGXADataSource
jdbc.username=postgres
jdbc.password=password

jdbc.serverName=lunos-db
jdbc.port=5432
jdbc.ApplicationName=test
jdbc.loginTimeout=30
jdbc.connectTimeout=30
jdbc.socketTimeout=30
jdbc.database=iaalunos
jdbc.ssl=false
jdbc.sslmode=disable
jdbc.uniqueResourceName=DS1
#jdbc.sslrootcert=/var/projects/mmi/bbbb/ayo-interactive/server.crt
#jdbc.sslfactory=org.postgresql.ssl.DefaultJavaSSLFactory

template=template.xml

spring.security.oauth2.resourceserver.jwt.client-id=fsa-web